apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'maven'

// JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}

dependencies {
    def springVer = "4.3.2.RELEASE"
    def hibernateVer = "5.1.0.Final"
    def oltuVer = "1.0.2"

    // junit
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'

    // slf4j
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    // spring
    compile group: 'org.springframework', name: 'spring-core', version: springVer
    compile group: 'org.springframework', name: 'spring-context', version: springVer
    compile group: 'org.springframework', name: 'spring-context-support', version: springVer
    compile group: 'org.springframework', name: 'spring-web', version: springVer
    compile group: 'org.springframework', name: 'spring-webmvc', version: springVer
    compile group: 'org.springframework', name: 'spring-aop', version: springVer
    compile group: 'org.springframework', name: 'spring-expression', version: springVer
    compile group: 'org.springframework', name: 'spring-tx', version: springVer
    compile group: 'org.springframework', name: 'spring-aspects', version: springVer
    compile group: 'org.springframework', name: 'spring-test', version: springVer
    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '1.10.2.RELEASE'

    // spring redis
    compile group: 'org.springframework.data', name: 'spring-data-redis', version: '1.6.6.RELEASE'
    compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
    compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.4.2'

    // hibernate
    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateVer
    compile group: 'org.hibernate', name: 'hibernate-validator', version: hibernateVer
    compile group: 'org.hibernate', name: 'hibernate-ehcache', version: hibernateVer
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: hibernateVer
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'

    // HikariCP
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.6.1'

    // ehcache
    compile group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.2.2.21'

    // jsp&jstl
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'

    // xml
    compile group: 'dom4j', name: 'dom4j', version: '1.6.1'

    // apache commons
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'org.apache.ant', name: 'ant', version: '1.8.2'

    // oltu
    compile group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.client', version: oltuVer
    compile group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.authzserver', version: oltuVer
    compile group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.resourceserver', version: oltuVer
    compile group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.common', version: oltuVer
    compile group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.jwt', version: oltuVer

    // shiro
    compile group: 'org.apache.shiro', name: 'shiro-all', version: '1.2.4'
    compile group: 'org.apache.shiro', name: 'shiro-quartz', version: '1.2.4'

    // aspectj
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.9'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.9'

    // json-lib
    compile 'net.sf.json-lib:json-lib:2.4:jdk15'

    // Jackson 将response转化为json的依赖文件
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.2'

    compile fileTree(dir: 'lib', include: ['*.jar'])
}

def clientPath = '../usms-client/'
def serverPath = './'

/**
 * 删除前端打包的文件
 */
task deletedist(type: Delete) {
    File propFile = new File(clientPath + 'dist')
    if (propFile != null) {
        delete clientPath + 'dist'
    }
}

/**
 * 打包前端文件
 */
task ngbuildfront(type: Exec, dependsOn: deletedist) {
    workingDir clientPath
    commandLine 'cmd', "/c", "ng build --base-href /usms/ --deploy-url /usms/"
}

/**
 * 将 build/main/java 编译的class打包成${project.name}-${version}.jar 放入到build/libs目录下，配置文件没必要打包
 */
task sourcesJar(type: Jar) {
    baseName project.name
    from serverPath + 'build/classes/main'
    destinationDir = file('build/libs')
}

/**
 * 1. 将 build/resources 下的配置文件(生产上的配置文件)拷贝到WEB-INF/classes目录
 *
 * 2. 将 build/resources 下面编译的文件拷贝到WEB-INF/classes目录中
 *
 * 3. clientPath 中生成的dist文件放入根目录中
 */
war {
    archiveName = 'usms.war'
    dependsOn ngbuildfront
    from(clientPath + 'dist') {
        into('')
    }
}
